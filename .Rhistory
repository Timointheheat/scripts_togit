two = 1.96, mode = 1, conf.int = 0.95)
# STEP Y) Criterion validity CORE vs REC ----
## C) ICC from package irr
icc_RQ_validity_Tc <- icc(cbind(Masterfile$Trec, Masterfile$T_core_torso_new),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tc <- ifelse(icc_RQ_validity_Tc$value < 0.49, "poor",
ifelse(icc_RQ_validity_Tc$value > 0.5 & icc_RQ_validity_Tc$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tc$value > 0.76 & icc_RQ_validity_Tc$value < 0.9, "good", ifelse(icc_RQ_validity_Tc$value > 0.91, "excellent"))))
icc_RQ_validity_Tsk <- icc(cbind(Masterfile$Tsk_average, Masterfile$T_skin_torso),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tsk <- ifelse(icc_RQ_validity_Tsk$value < 0.49, "poor",
ifelse(icc_RQ_validity_Tsk$value > 0.5 & icc_RQ_validity_Tsk$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tsk$value > 0.76 & icc_RQ_validity_Tsk$value < 0.9, "good", ifelse(icc_RQ_validity_Tsk$value > 0.91, "excellent"))))
## D) BA-analysis from package BlandAltmanLeh
bland.altman.plot(Masterfile$Trec, Masterfile$T_core_torso_new,
main="Bland Altman Plot: Trec vs CORE_torso",
xlab="Means", ylab="Differences", silent=FALSE)
BAresult_RQ_validity_Tc <- bland.altman.stats(Masterfile$Trec, Masterfile$T_core_torso_new, two = 1.96, mode = 1, conf.int = 0.95)
BAresult_RQ_validity_Tsk <- bland.altman.stats(Masterfile$Tsk_average, Masterfile$T_skin_torso, two = 1.96, mode = 1, conf.int = 0.95)
# STEP Z) Criterion validity TORSO VS WRIST ----
## C) ICC from package irr
icc_RQ_validity_Tc_torso_wrist <- icc(cbind(Masterfile$T_core_torso_new, Masterfile$T_core_hand_new),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tc_torso_wrist <- ifelse(icc_RQ_validity_Tc_torso_wrist$value < 0.49, "poor", ifelse(icc_RQ_validity_Tc_torso_wrist$value > 0.5 & icc_RQ_validity_Tc_torso_wrist$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tc_torso_wrist$value > 0.76 & icc_RQ_validity_Tc_torso_wrist$value < 0.9, "good", ifelse(icc_RQ_validity_Tc_torso_wrist$value > 0.91, "excellent"))))
icc_RQ_validity_Tsk_torso_wrist <- icc(cbind(Masterfile$T_skin_torso, Masterfile$T_skin_hand),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tsk_torso_wrist <- ifelse(icc_RQ_validity_Tsk_torso_wrist$value < 0.49, "poor",
ifelse(icc_RQ_validity_Tsk_torso_wrist$value > 0.5 & icc_RQ_validity_Tsk_torso_wrist$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tsk_torso_wrist$value > 0.76 & icc_RQ_validity_Tsk_torso_wrist$value < 0.9, "good", ifelse(icc_RQ_validity_Tsk_torso_wrist$value > 0.91, "excellent"))))
## D) BA-analysis from package BlandAltmanLeh
bland.altman.plot(Masterfile$T_core_torso_new, Masterfile$T_core_hand_new,
main="Bland Altman Plot: Torso vs Wrist",
xlab="Means", ylab="Differences (torso-wrist)", silent=FALSE)
BAresult_RQ_validity_Tc_torso_wrist <- bland.altman.stats(Masterfile$T_core_torso_new, Masterfile$T_core_hand_new, two = 1.96, mode = 1, conf.int = 0.95)
BAresult_RQ_validity_Tsk_torso_wrist <- bland.altman.stats(Masterfile$T_skin_torso, Masterfile$T_skin_hand, two = 1.96, mode = 1, conf.int = 0.95)
View(long_dTc_rest)
View(ANOVA_results_dTc_rest)
ANOVA_results_dTc_rest
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value_imp)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9) %>%
ungroup() %>%
group_by(pp) %>%
filter(n_distinct(device) == 2)%>%
nrow()
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9) %>%
ungroup() %>%
group_by(pp) %>%
filter(n_distinct(device) == 2)%>%
nrow()
ncount/2
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9) %>%
ungroup() %>%
group_by(pp) %>%
filter(n_distinct(device) == 2)%>%
nrow()
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9) %>%
ungroup() %>%
group_by(pp) %>%
filter(n_distinct(device) == 2)%>%
nrow()
ncount
long_dTc_rest
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9)
ncount
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9)%>%
ungroup() %>%
group_by(pp) %>%
filter(n_distinct(device) == 2)
ncount
View(long_dTc_rest)
## E) Execute mixed-model  ----
ncount <- long_dTc_rest %>%
filter(!is.na(value)) %>%
group_by(pp, device) %>%
summarize(ha_count = n_distinct(ha)) %>%
filter(ha_count == 9)
ncount
ANOVA_results_dTc_rest <- anova_test(long_dTc_rest,
dv = value,
wid = pp,
between = device,
within = ha)
ANOVA_results_dTc_rest
ANOVA_results_dTc_ex
ANOVA_results_dTsk_ex
ANOVA_results_dTsk_rest
long_dTc_rest <- Changes_overHA %>%
dplyr::select(pp, ha, dTc_rec_rest_mean, dTc_core_torso_rest_mean) %>%
pivot_longer(cols = starts_with("dTc"), names_to = "device", values_to = "value") %>%
mutate(pp = as.factor(pp),
device = ifelse(device == "dTc_rec_rest_mean", "rec", "core"),
ha = as.factor(ha),
device = as.factor(device),
nudge_x = ifelse(device == "rec", -0.1, 0.1))
ANOVA_results_dTc_rest <- anova_test(long_dTc_rest,
dv = value,
wid = pp,
between = device,
within = ha)
View(pairwise_comparisons_ha_dTc_rest)
View(pairwise_comparisons_ha_dTc_rest)
pairwise_comparisons_ha_dTc_rest
View(Means)
View(Changes_overHA)
#| echo: false
#| include: false
# STEP 1) Load  Masterfile and exclude pp ----
Masterfile <- read_excel(paste0(here("data/data_output"), "/HA_Masterfile_cleaned_2412025.xlsx"))
## p5, p6, p13, p24 did not show up, exclude
Masterfile <- Masterfile %>%
filter(!pp %in% c(5, 6, 13, 24))
## p2, p3, p4, p10, p22 dropped out due to a variety of reasons,
## excluded only from the HA-adaptations RQ, see below.
## pp25 HA1 Trec data: measurement error, exclude.
Masterfile <- Masterfile %>%
mutate(Trec = ifelse(pp == 25 & ha == 1, NA, Trec))
# STEP 2) Answer if CORE can be used to track HA-adaptations ----
## 0) exclude people who did not finish HA-protocol
RQ_HAadaptations_Masterfile <- Masterfile %>%
filter(!pp %in% c(2, 3, 4, 10, 22, 25))
## A) Get average values for Tsk, Trec and Tcore in rest (min 10-15) and constant exercise (min 40-45) ----
Means <- RQ_HAadaptations_Masterfile %>%
group_by(pp, ha) %>%
summarise(
Tc_rec_rest_mean = mean(Trec[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tsk_ib_rest_mean = mean(Tsk_average[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tc_core_torso_rest_mean = mean(T_core_torso_new[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tc_core_hand_rest_mean = mean(T_core_hand_new[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tsk_core_torso_rest_mean = mean(T_skin_torso[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tsk_core_hand_rest_mean = mean(T_skin_hand[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tc_rec_ex_mean = mean(Trec[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tc_core_torso_ex_mean = mean(T_core_torso_new[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tc_core_hand_ex_mean = mean(T_core_hand_new[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tsk_ib_ex_mean = mean(Tsk_average[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tsk_core_torso_ex_mean = mean(T_skin_torso[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tsk_core_hand_ex_mean = mean(T_skin_hand[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
HR_rest_mean = mean(HR_polar[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
HR_ex_mean = mean(HR_polar[Minutes >= 40 & Minutes <= 45], na.rm = TRUE))
## B) Get the change in values by substracting the first HA for each pp -----
Changes_overHA <- Means %>%
group_by(pp) %>%
mutate(
dTc_rec_rest_mean = ifelse(ha == 1, 0, Tc_rec_rest_mean - first(Tc_rec_rest_mean)),
dTsk_ib_rest_mean = ifelse(ha == 1, 0, Tsk_ib_rest_mean - first(Tsk_ib_rest_mean)),
dTc_core_torso_rest_mean = ifelse(ha == 1, 0, Tc_core_torso_rest_mean - first(Tc_core_torso_rest_mean)),
dTc_core_hand_rest_mean = ifelse(ha == 1, 0, Tc_core_hand_rest_mean - first(Tc_core_hand_rest_mean)),
dTsk_core_torso_rest_mean = ifelse(ha == 1, 0, Tsk_core_torso_rest_mean - first(Tsk_core_torso_rest_mean)),
dTsk_core_hand_rest_mean = ifelse(ha == 1, 0, Tsk_core_hand_rest_mean - first(Tsk_core_hand_rest_mean)),
dTc_rec_ex_mean = ifelse(ha == 1, 0, Tc_rec_ex_mean - first(Tc_rec_ex_mean)),
dTsk_ib_ex_mean = ifelse(ha == 1, 0, Tsk_ib_ex_mean - first(Tsk_ib_ex_mean)),
dTc_core_torso_ex_mean = ifelse(ha == 1, 0, Tc_core_torso_ex_mean - first(Tc_core_torso_ex_mean)),
dTc_core_hand_ex_mean = ifelse(ha == 1, 0, Tc_core_hand_ex_mean - first(Tc_core_hand_ex_mean)),
dTsk_core_torso_ex_mean = ifelse(ha == 1, 0, Tsk_core_torso_ex_mean - first(Tsk_core_torso_ex_mean)),
dTsk_core_hand_ex_mean = ifelse(ha == 1, 0, Tsk_core_hand_ex_mean - first(Tsk_core_hand_ex_mean)),
dHR_rest_mean = ifelse(ha == 1, 0, HR_rest_mean - first(HR_rest_mean)),
dHR_ex_mean = ifelse(ha == 1, 0, HR_ex_mean - first(HR_ex_mean))
)
## C) for-loop that calculates ICC and BA for all variables----
variables_to_test <- c("dTc_rest_mean", "dTc_ex_mean", "dTsk_rest_mean", "dTsk_ex_mean")
results_df <- data.frame(
Variable = character(),
Mean_Diffs = numeric(),
Lower_Limit = numeric(),
Upper_Limit = numeric(),
ICC_Value = numeric(),
ICC_Interpretation = character(),
stringsAsFactors = FALSE
)
for (variable in variables_to_test) {
# A) Get appropriate column names
corefilename <- ifelse(variable == "dTc_rest_mean" ,"dTc_core_torso_rest_mean", ifelse(variable == "dTc_ex_mean" ,"dTc_core_torso_ex_mean",ifelse(variable == "dTsk_rest_mean" ,"dTsk_core_torso_rest_mean",ifelse(variable == "dTsk_ex_mean" ,"dTsk_core_torso_ex_mean","NA"))))
recfilename <- ifelse(variable == "dTc_rest_mean" ,"dTc_rec_rest_mean", ifelse(variable == "dTc_ex_mean" ,"dTc_rec_ex_mean",ifelse(variable == "dTsk_rest_mean" ,"dTsk_ib_rest_mean",ifelse(variable == "dTsk_ex_mean" ,"dTsk_ib_ex_mean","NA"))))
# B) Filter right columns
filtered <- Changes_overHA %>%
dplyr::select(pp, ha, !!sym(recfilename), !!sym(corefilename)) %>%
filter(!ha == 1)
# C) Get ICC score for specific variable & interpretation
icc_RQ_adaptations <-
icc(cbind(filtered[[recfilename]],filtered[[corefilename]]),
model="twoway", type="agreement", unit="single")
assign(paste0("icc_RQ_adapt_", variable, ""), icc_RQ_adaptations)
icc_inter_RQ_adaptations <- ifelse(icc_RQ_adaptations$value < 0.49, "poor",
ifelse(icc_RQ_adaptations$value > 0.5 & icc_RQ_adaptations$value < 0.75, "moderate", ifelse(icc_RQ_adaptations$value > 0.76 & icc_RQ_adaptations$value < 0.9, "good", ifelse(icc_RQ_adaptations$value > 0.91, "excellent"))))
assign(paste0("icc_inter_RQ_adapt_", variable, ""), icc_inter_RQ_adaptations)
## D) BA-analysis from package BlandAltmanLeh
BAresult_RQ_adaptations <- bland.altman.stats(filtered[[recfilename]],filtered[[corefilename]],
two = 1.96, mode = 1, conf.int = 0.95)
assign(paste0("BA_RQ_adapt_", variable, ""), BAresult_RQ_adaptations)
## E) Append results to the data frame
results_df <- rbind(results_df, data.frame(
Variable = variable,
Mean_Diffs = round(BAresult_RQ_adaptations$mean.diffs, 2),
Lower_Limit = round(BAresult_RQ_adaptations$lower.limit, 2),
Upper_Limit = round(BAresult_RQ_adaptations$upper.limit, 2),
ICC_Value = round(icc_RQ_adaptations$value, 2),
ICC_Interpretation = icc_inter_RQ_adaptations
))
}
## D) Assess normality of data
### Done using the function below.
### Only limited data was not-normaly distributed. Therefore we choose to do parametric tests.
## E) Creating long-format for the mixed-model
### Entire Masterfile
long_Masterfile <- Masterfile %>%
dplyr::select(pp, ha, Minutes, Trec, T_core_torso_new) %>%
pivot_longer(cols = starts_with("T"), names_to = "device", values_to = "value") %>%
mutate(device = ifelse(device == "Trec", "rec", "core"),
ha = as.factor(ha),
device = as.factor(device),
nudge_x = ifelse(device == "rec", -0.1, 0.1))
mean_values_Tc <- long_Masterfile %>%
group_by(Minutes, device) %>%
summarise(value = mean(value, na.rm = TRUE)) %>%
mutate(nudge_x = ifelse(device == "rec", -0.1, 0.1))
### Resting Core and skin
long_dTc_rest <- Changes_overHA %>%
dplyr::select(pp, ha, dTc_rec_rest_mean, dTc_core_torso_rest_mean) %>%
pivot_longer(cols = starts_with("dTc"), names_to = "device", values_to = "value") %>%
mutate(pp = as.factor(pp),
device = ifelse(device == "dTc_rec_rest_mean", "rec", "core"),
ha = as.factor(ha),
device = as.factor(device),
nudge_x = ifelse(device == "rec", -0.1, 0.1)) %>%
ungroup() %>%                 # Impute using average from value above and below
group_by(pp, device) %>%
mutate(value = na.approx(value, na.rm = FALSE)) %>%
ungroup()
mean_values_dTc_rest <- long_dTc_rest %>%
group_by(ha, device) %>%
summarise(value = mean(value, na.rm = TRUE)) %>%
mutate(nudge_x = ifelse(device == "rec", -0.1, 0.1))
long_dTsk_rest <- Changes_overHA %>%
dplyr::select(pp, ha, dTsk_ib_rest_mean, dTsk_core_torso_rest_mean) %>%
pivot_longer(cols = starts_with("dTsk"), names_to = "device", values_to = "value") %>%
mutate(pp = as.factor(pp),
device = ifelse(device == "dTsk_ib_rest_mean", "ib", "core"),
ha = as.factor(ha),
device = as.factor(device),
nudge_x = ifelse(device == "ib", -0.1, 0.1))%>%
ungroup() %>%                 # Impute using average from value above and below
group_by(pp, device) %>%
mutate(value = na.approx(value, na.rm = FALSE)) %>%
ungroup()
mean_values_dTsk_rest <- long_dTsk_rest %>%
group_by(ha, device) %>%
summarise(value = mean(value, na.rm = TRUE)) %>%
mutate(nudge_x = ifelse(device == "ib", -0.1, 0.1))
### Excercising core and skin
long_dTc_ex <- Changes_overHA %>%
dplyr::select(pp, ha, dTc_rec_ex_mean, dTc_core_torso_ex_mean) %>%
pivot_longer(cols = starts_with("dTc"), names_to = "device", values_to = "value") %>%
mutate(pp = as.factor(pp),
device = ifelse(device == "dTc_rec_ex_mean", "rec", "core"),
ha = as.factor(ha),
device = as.factor(device),
nudge_x = ifelse(device == "rec", -0.1, 0.1))%>%
ungroup() %>%                 # Impute using average from value above and below
group_by(pp, device) %>%
mutate(value = na.approx(value, na.rm = FALSE)) %>%
ungroup()
mean_values_dTc_ex <- long_dTc_ex %>%
group_by(ha, device) %>%
summarise(value = mean(value, na.rm = TRUE)) %>%
mutate(nudge_x = ifelse(device == "rec", -0.1, 0.1))
long_dTsk_ex <- Changes_overHA %>%
dplyr::select(pp, ha, dTsk_ib_ex_mean, dTsk_core_torso_ex_mean) %>%
pivot_longer(cols = starts_with("dTsk"), names_to = "device", values_to = "value") %>%
mutate(pp = as.factor(pp),
device = ifelse(device == "dTsk_ib_ex_mean", "ib", "core"),
ha = as.factor(ha),
device = as.factor(device),
nudge_x = ifelse(device == "ib", -0.1, 0.1))%>%
ungroup() %>%                 # Impute using average from value above and below
group_by(pp, device) %>%
mutate(value = na.approx(value, na.rm = FALSE)) %>%
ungroup()
mean_values_dTsk_ex <- long_dTsk_ex %>%
group_by(ha, device) %>%
summarise(value = mean(value, na.rm = TRUE)) %>%
mutate(nudge_x = ifelse(device == "ib", -0.1, 0.1))
## F) Execute mixed-models
ANOVA_results_dTc_rest <- anova_test(long_dTc_rest,
dv = value,
wid = pp,
between = device,
within = ha)
ANOVA_results_dTc_ex <- anova_test(long_dTc_ex,
dv = value,
wid = pp,
between = device,
within = ha)
ANOVA_results_dTsk_rest <- anova_test(long_dTsk_rest,
dv = value,
wid = pp,
between = device,
within = ha)
ANOVA_results_dTsk_ex <- anova_test(long_dTsk_ex,
dv = value,
wid = pp,
between = device,
within = ha)
## G) Append results to the data frame
results_df_mmANOVA <- data.frame(
variable = c("dTc_rest", "dTc_ex", "dTsk_rest", "dTsk_ex"),
Interaction = c(paste0("F(", ANOVA_results_dTc_rest$ANOVA[3,2], ", ", ANOVA_results_dTc_rest$ANOVA[3,3], ") = ", ANOVA_results_dTc_rest$ANOVA[3,4], ", P = ", ANOVA_results_dTc_rest$ANOVA[3,5], " ES = ", ANOVA_results_dTc_rest$ANOVA[3,7]),
paste0("F(", ANOVA_results_dTc_ex$ANOVA[3,2], ", ", ANOVA_results_dTc_ex$ANOVA[3,3], ") = ", ANOVA_results_dTc_ex$ANOVA[3,4], ", P = ", ANOVA_results_dTc_ex$ANOVA[3,5], " ES = ", ANOVA_results_dTc_ex$ANOVA[3,7]),
paste0("F(", ANOVA_results_dTsk_rest$ANOVA[3,2], ", ", ANOVA_results_dTsk_rest$ANOVA[3,3], ") = ", ANOVA_results_dTsk_rest$ANOVA[3,4], ", P = ", ANOVA_results_dTsk_rest$ANOVA[3,5], " ES = ", ANOVA_results_dTsk_rest$ANOVA[3,7]),
paste0("F(", ANOVA_results_dTsk_ex$ANOVA[3,2], ", ", ANOVA_results_dTsk_ex$ANOVA[3,3], ") = ", ANOVA_results_dTsk_ex$ANOVA[3,4], ", P = ", ANOVA_results_dTsk_ex$ANOVA[3,5], " ES = ", ANOVA_results_dTsk_ex$ANOVA[3,7])
),
Main_HA = c(
paste0("F(", ANOVA_results_dTc_rest$ANOVA[2,2], ", ", ANOVA_results_dTc_rest$ANOVA[2,3], ") = ", ANOVA_results_dTc_rest$ANOVA[2,4], ", P = ", ANOVA_results_dTc_rest$ANOVA[2,5], " ES = ", ANOVA_results_dTc_rest$ANOVA[2,7]),
paste0("F(", ANOVA_results_dTc_ex$ANOVA[2,2], ", ", ANOVA_results_dTc_ex$ANOVA[2,3], ") = ", ANOVA_results_dTc_ex$ANOVA[2,4], ", P = ", ANOVA_results_dTc_ex$ANOVA[2,5], " ES = ", ANOVA_results_dTc_ex$ANOVA[2,7]),
paste0("F(", ANOVA_results_dTsk_rest$ANOVA[2,2], ", ", ANOVA_results_dTsk_rest$ANOVA[2,3], ") = ", ANOVA_results_dTsk_rest$ANOVA[2,4], ", P = ", ANOVA_results_dTsk_rest$ANOVA[2,5], " ES = ", ANOVA_results_dTsk_rest$ANOVA[2,7]),
paste0("F(", ANOVA_results_dTsk_ex$ANOVA[2,2], ", ", ANOVA_results_dTsk_ex$ANOVA[2,3], ") = ", ANOVA_results_dTsk_ex$ANOVA[2,4], ", P = ", ANOVA_results_dTsk_ex$ANOVA[2,5], " ES = ", ANOVA_results_dTsk_ex$ANOVA[2,7])
)
)
## H) execute post-hoc tests
model_dTc_rest <- lmer(as.formula(paste("value ~ device * ha + (1|pp)")),data = long_dTc_rest)
emm_ha_dTc_rest <- emmeans(model_dTc_rest, ~ ha | device)
pairwise_comparisons_ha_dTc_rest <- contrast(emm_ha_dTc_rest, method = "trt.vs.ctrl", ref = 1, adjust = "bonferroni")
model_dTc_ex <- lmer(as.formula(paste("value ~ device * ha + (1|pp)")),data = long_dTc_ex)
emm_ha_dTc_ex <- emmeans(model_dTc_ex, ~ ha | device)
pairwise_comparisons_ha_dTc_ex <- contrast(emm_ha_dTc_ex, method = "trt.vs.ctrl", ref = 1, adjust = "bonferroni")
model_dTsk_rest <- lmer(as.formula(paste("value ~ device * ha + (1|pp)")),data = long_dTsk_rest)
emm_ha_dTsk_rest <- emmeans(model_dTsk_rest, ~ ha | device)
pairwise_comparisons_ha_dTsk_rest <- contrast(emm_ha_dTsk_rest, method = "trt.vs.ctrl", ref = 1, adjust = "bonferroni")
model_dTsk_ex <- lmer(as.formula(paste("value ~ device * ha + (1|pp)")),data = long_dTsk_ex)
emm_ha_dTsk_ex <- emmeans(model_dTsk_ex, ~ ha | device)
pairwise_comparisons_ha_dTsk_ex <- contrast(emm_ha_dTsk_ex, method = "trt.vs.ctrl", ref = 1, adjust = "bonferroni")
# STEP X) RQ: time spend above 38.5----
## A) get right data to answer RQ
Data_Q_ch <-  Masterfile %>%
filter(!is.na(Trec) & !is.na(T_core_torso_new)) %>%
#filter(!pp == 7) %>%
dplyr::select(pp, ha, Trec, T_core_torso_new)
## B) Calculate time above 38.5 using CORE and REC. Calculate diff.
time_above_385 <- Data_Q_ch %>%
group_by(pp, ha) %>%
summarise(count_Trec = sum(Trec >= 38.5, na.rm = TRUE),
count_Tcore_torso = sum(T_core_torso_new >= 38.5, na.rm = TRUE)) %>%
mutate(diff = count_Trec - count_Tcore_torso)
## C) ICC from package irr
icc_RQ_above385 <- icc(cbind(time_above_385$count_Trec, time_above_385$count_Tcore_torso),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_above385 <- ifelse(icc_RQ_above385$value < 0.49, "poor",
ifelse(icc_RQ_above385$value > 0.5 & icc_RQ_above385$value < 0.75, "moderate", ifelse(icc_RQ_above385$value > 0.76 & icc_RQ_above385$value < 0.9, "good", ifelse(icc_RQ_above385$value > 0.91, "excellent"))))
## D) BA-analysis from package BlandAltmanLeh
bland.altman.plot(time_above_385$count_Trec, time_above_385$count_Tcore_torso,
main="Bland Altman Plot",
xlab="Means", ylab="Differences", silent=FALSE)
BAresult_RQ_above385 <- bland.altman.stats(time_above_385$count_Trec, time_above_385$count_Tcore_torso,
two = 1.96, mode = 1, conf.int = 0.95)
# STEP Y) Criterion validity CORE vs REC ----
## C) ICC from package irr
icc_RQ_validity_Tc <- icc(cbind(Masterfile$Trec, Masterfile$T_core_torso_new),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tc <- ifelse(icc_RQ_validity_Tc$value < 0.49, "poor",
ifelse(icc_RQ_validity_Tc$value > 0.5 & icc_RQ_validity_Tc$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tc$value > 0.76 & icc_RQ_validity_Tc$value < 0.9, "good", ifelse(icc_RQ_validity_Tc$value > 0.91, "excellent"))))
icc_RQ_validity_Tsk <- icc(cbind(Masterfile$Tsk_average, Masterfile$T_skin_torso),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tsk <- ifelse(icc_RQ_validity_Tsk$value < 0.49, "poor",
ifelse(icc_RQ_validity_Tsk$value > 0.5 & icc_RQ_validity_Tsk$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tsk$value > 0.76 & icc_RQ_validity_Tsk$value < 0.9, "good", ifelse(icc_RQ_validity_Tsk$value > 0.91, "excellent"))))
## D) BA-analysis from package BlandAltmanLeh
bland.altman.plot(Masterfile$Trec, Masterfile$T_core_torso_new,
main="Bland Altman Plot: Trec vs CORE_torso",
xlab="Means", ylab="Differences", silent=FALSE)
BAresult_RQ_validity_Tc <- bland.altman.stats(Masterfile$Trec, Masterfile$T_core_torso_new, two = 1.96, mode = 1, conf.int = 0.95)
BAresult_RQ_validity_Tsk <- bland.altman.stats(Masterfile$Tsk_average, Masterfile$T_skin_torso, two = 1.96, mode = 1, conf.int = 0.95)
# STEP Z) Criterion validity TORSO VS WRIST ----
## C) ICC from package irr
icc_RQ_validity_Tc_torso_wrist <- icc(cbind(Masterfile$T_core_torso_new, Masterfile$T_core_hand_new),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tc_torso_wrist <- ifelse(icc_RQ_validity_Tc_torso_wrist$value < 0.49, "poor", ifelse(icc_RQ_validity_Tc_torso_wrist$value > 0.5 & icc_RQ_validity_Tc_torso_wrist$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tc_torso_wrist$value > 0.76 & icc_RQ_validity_Tc_torso_wrist$value < 0.9, "good", ifelse(icc_RQ_validity_Tc_torso_wrist$value > 0.91, "excellent"))))
icc_RQ_validity_Tsk_torso_wrist <- icc(cbind(Masterfile$T_skin_torso, Masterfile$T_skin_hand),
model="twoway", type="agreement", unit="single")
icc_inter_RQ_validity_Tsk_torso_wrist <- ifelse(icc_RQ_validity_Tsk_torso_wrist$value < 0.49, "poor",
ifelse(icc_RQ_validity_Tsk_torso_wrist$value > 0.5 & icc_RQ_validity_Tsk_torso_wrist$value < 0.75, "moderate", ifelse(icc_RQ_validity_Tsk_torso_wrist$value > 0.76 & icc_RQ_validity_Tsk_torso_wrist$value < 0.9, "good", ifelse(icc_RQ_validity_Tsk_torso_wrist$value > 0.91, "excellent"))))
## D) BA-analysis from package BlandAltmanLeh
bland.altman.plot(Masterfile$T_core_torso_new, Masterfile$T_core_hand_new,
main="Bland Altman Plot: Torso vs Wrist",
xlab="Means", ylab="Differences (torso-wrist)", silent=FALSE)
BAresult_RQ_validity_Tc_torso_wrist <- bland.altman.stats(Masterfile$T_core_torso_new, Masterfile$T_core_hand_new, two = 1.96, mode = 1, conf.int = 0.95)
BAresult_RQ_validity_Tsk_torso_wrist <- bland.altman.stats(Masterfile$T_skin_torso, Masterfile$T_skin_hand, two = 1.96, mode = 1, conf.int = 0.95)
View(long_dTc_rest)
View(Means)
View(Masterfile)
View(Masterfile)
rm(list=ls())
# Load necessary libraries
library(readr)
library(tidyr)
library(dplyr)
library(ggpubr)
#library(quarto)
library(here)
library(readxl)
library(psych)
library(rstatix)
library(MASS)
library(irr)
library(BlandAltmanLeh)
library(lme4)
library(emmeans)
library(zoo)
# STEP 1) Load  Masterfile and exclude pp ----
Masterfile <- read_excel(paste0(here("data/data_output"), "/HA_Masterfile_cleaned_2412025.xlsx"))
## p5, p6, p13, p24 did not show up, exclude
Masterfile <- Masterfile %>%
filter(!pp %in% c(5, 6, 13, 24))
## pp25 HA1 Trec data: measurement error, exclude.
Masterfile <- Masterfile %>%
mutate(Trec = ifelse(pp == 25 & ha == 1, NA, Trec))
## 0) exclude people who did not finish HA-protocol
RQ_HAadaptations_Masterfile <- Masterfile %>%
filter(!pp %in% c(2, 3, 4, 10, 18, 22, 25))
## A) Get average values for Tsk, Trec and Tcore in rest (min 10-15) and constant exercise (min 40-45) ----
Means <- RQ_HAadaptations_Masterfile %>%
group_by(pp, ha) %>%
summarise(
Tc_rec_rest_mean = mean(Trec[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tsk_ib_rest_mean = mean(Tsk_average[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tc_core_torso_rest_mean = mean(T_core_torso_new[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tc_core_hand_rest_mean = mean(T_core_hand_new[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tsk_core_torso_rest_mean = mean(T_skin_torso[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tsk_core_hand_rest_mean = mean(T_skin_hand[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
Tc_rec_ex_mean = mean(Trec[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tc_core_torso_ex_mean = mean(T_core_torso_new[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tc_core_hand_ex_mean = mean(T_core_hand_new[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tsk_ib_ex_mean = mean(Tsk_average[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tsk_core_torso_ex_mean = mean(T_skin_torso[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
Tsk_core_hand_ex_mean = mean(T_skin_hand[Minutes >= 40 & Minutes <= 45], na.rm = TRUE),
HR_rest_mean = mean(HR_polar[Minutes >= 10 & Minutes <= 15], na.rm = TRUE),
HR_ex_mean = mean(HR_polar[Minutes >= 40 & Minutes <= 45], na.rm = TRUE))
View(Means)
Changes_overHA <- Means %>%
group_by(pp) %>%
mutate(
dTc_rec_rest_mean = ifelse(ha == 1, 0, Tc_rec_rest_mean - first(Tc_rec_rest_mean)),
dTsk_ib_rest_mean = ifelse(ha == 1, 0, Tsk_ib_rest_mean - first(Tsk_ib_rest_mean)),
dTc_core_torso_rest_mean = ifelse(ha == 1, 0, Tc_core_torso_rest_mean - first(Tc_core_torso_rest_mean)),
dTc_core_hand_rest_mean = ifelse(ha == 1, 0, Tc_core_hand_rest_mean - first(Tc_core_hand_rest_mean)),
dTsk_core_torso_rest_mean = ifelse(ha == 1, 0, Tsk_core_torso_rest_mean - first(Tsk_core_torso_rest_mean)),
dTsk_core_hand_rest_mean = ifelse(ha == 1, 0, Tsk_core_hand_rest_mean - first(Tsk_core_hand_rest_mean)),
dTc_rec_ex_mean = ifelse(ha == 1, 0, Tc_rec_ex_mean - first(Tc_rec_ex_mean)),
dTsk_ib_ex_mean = ifelse(ha == 1, 0, Tsk_ib_ex_mean - first(Tsk_ib_ex_mean)),
dTc_core_torso_ex_mean = ifelse(ha == 1, 0, Tc_core_torso_ex_mean - first(Tc_core_torso_ex_mean)),
dTc_core_hand_ex_mean = ifelse(ha == 1, 0, Tc_core_hand_ex_mean - first(Tc_core_hand_ex_mean)),
dTsk_core_torso_ex_mean = ifelse(ha == 1, 0, Tsk_core_torso_ex_mean - first(Tsk_core_torso_ex_mean)),
dTsk_core_hand_ex_mean = ifelse(ha == 1, 0, Tsk_core_hand_ex_mean - first(Tsk_core_hand_ex_mean)),
dHR_rest_mean = ifelse(ha == 1, 0, HR_rest_mean - first(HR_rest_mean)),
dHR_ex_mean = ifelse(ha == 1, 0, HR_ex_mean - first(HR_ex_mean))
)
plot(Changes_overHA$Tc_rec_rest_mean, Changes_overHA$Tc_core_torso_rest_mean)
plot(Changes_overHA$dTc_rec_rest_mean, Changes_overHA$dTc_core_torso_rest_mean)
corr.test(Changes_overHA$dTc_rec_rest_mean, Changes_overHA$dTc_core_torso_rest_mean)
corr.test(Changes_overHA$dTc_rec_rest_mean, Changes_overHA$dTc_core_torso_rest_mean, method = "pearson")
corr.test(Changes_overHA$dTc_rec_ex_mean, Changes_overHA$dTc_core_torso_ex_mean, method = "pearson")
Data_Q_ch <-  Masterfile %>%
filter(!is.na(Trec) & !is.na(T_core_torso_new)) %>%
#filter(!pp == 7) %>%
dplyr::select(pp, ha, Trec, T_core_torso_new)
## B) Calculate time above 38.5 using CORE and REC. Calculate diff.
time_above_385 <- Data_Q_ch %>%
group_by(pp, ha) %>%
summarise(count_Trec = sum(Trec >= 38.5, na.rm = TRUE),
count_Tcore_torso = sum(T_core_torso_new >= 38.5, na.rm = TRUE)) %>%
mutate(diff = count_Trec - count_Tcore_torso)
View(time_above_385)
time_above_385 %>% summarise(averagetime = mean(count_Trec))
time_above_385$count_Trec %>% summarise(averagetime = mean(count_Trec))
time_above_385 %>% summarise(averagetime = mean(count_Trec))
time_above_385 %>% ungroup() %>% summarise(averagetime = mean(count_Trec))
time_above_385 %>% ungroup() %>% filter(!!pp == 7) %>% summarise(averagetime = mean(count_Trec))
Data_Q_ch <-  Masterfile %>%
filter(!is.na(Trec) & !is.na(T_core_torso_new)) %>%
filter(!pp == 7) %>%
dplyr::select(pp, ha, Trec, T_core_torso_new)
## B) Calculate time above 38.5 using CORE and REC. Calculate diff.
time_above_385 <- Data_Q_ch %>%
group_by(pp, ha) %>%
summarise(count_Trec = sum(Trec >= 38.5, na.rm = TRUE),
count_Tcore_torso = sum(T_core_torso_new >= 38.5, na.rm = TRUE)) %>%
mutate(diff = count_Trec - count_Tcore_torso)
time_above_385 %>% ungroup() %>% summarise(averagetime = mean(count_Trec))
time_above_385 %>% ungroup() %>% summarise(averagetime = mean(count_Trec), sdtime = sd(count_Trec))
Changes_overHA %>% filter(pp == 7) %>% dplyr::select(dTc_rec_rest_mean, dTc_rec_ex_mean)
